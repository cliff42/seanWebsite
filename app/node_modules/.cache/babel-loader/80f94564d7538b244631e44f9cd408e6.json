{"remainingRequest":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/babel-loader/lib/index.js!/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chris/Documents/GitHub/seanWebsite/app/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/src/views/Home.vue","mtime":1611907808294},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2NocmlzL0RvY3VtZW50cy9HaXRIdWIvc2VhbldlYnNpdGUvYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgcmVmIH0gZnJvbSAnQHZ1ZS9jb21wb3NpdGlvbi1hcGknOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hvbWUnLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cCgpIHsKICAgIHZhciBuYW1lID0gcmVmKCcnKTsKICAgIHZhciBzdWJyZWRkaXQgPSByZWYoJycpOwogICAgdmFyIG9wdGlvblNwZWVjaCA9IHJlZihmYWxzZSk7CiAgICB2YXIgb3B0aW9uTmV3cyA9IHJlZihmYWxzZSk7CiAgICB2YXIgbWVzc2FnZSA9IHJlZignJyk7CgogICAgZnVuY3Rpb24gb25TdWJtaXQoKSB7CiAgICAgIHJldHVybiBfb25TdWJtaXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICBmdW5jdGlvbiBfb25TdWJtaXQoKSB7CiAgICAgIF9vblN1Ym1pdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgZm9ybURhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZm9ybURhdGEgPSB7CiAgICAgICAgICAgICAgICAgICJuYW1lIjogbmFtZS52YWx1ZSwKICAgICAgICAgICAgICAgICAgInN1YnJlZGRpdCI6IHN1YnJlZGRpdC52YWx1ZSwKICAgICAgICAgICAgICAgICAgImhhdGVTcGVlY2giOiBvcHRpb25TcGVlY2gudmFsdWUsCiAgICAgICAgICAgICAgICAgICJmYWtlTmV3cyI6IG9wdGlvbk5ld3MudmFsdWUKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhmb3JtRGF0YSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9wb3N0Qm90JywgZm9ybURhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBtZXNzYWdlLnZhbHVlID0gJ0JvdCBDcmVhdGVkISc7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwogICAgICAgICAgICAgICAgbWVzc2FnZS52YWx1ZSA9IF9jb250ZXh0LnQwOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1syLCA4XV0pOwogICAgICB9KSk7CiAgICAgIHJldHVybiBfb25TdWJtaXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICA7CiAgICByZXR1cm4gewogICAgICBuYW1lOiBuYW1lLAogICAgICBzdWJyZWRkaXQ6IHN1YnJlZGRpdCwKICAgICAgb3B0aW9uU3BlZWNoOiBvcHRpb25TcGVlY2gsCiAgICAgIG9wdGlvbk5ld3M6IG9wdGlvbk5ld3MsCiAgICAgIG9uU3VibWl0OiBvblN1Ym1pdCwKICAgICAgbWVzc2FnZTogbWVzc2FnZQogICAgfTsKICB9Cn07"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAAA,GAAA,QAAA,sBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAFA,mBAEA;AACA,QAAA,IAAA,GAAA,GAAA,CAAA,EAAA,CAAA;AACA,QAAA,SAAA,GAAA,GAAA,CAAA,EAAA,CAAA;AACA,QAAA,YAAA,GAAA,GAAA,CAAA,KAAA,CAAA;AACA,QAAA,UAAA,GAAA,GAAA,CAAA,KAAA,CAAA;AACA,QAAA,OAAA,GAAA,GAAA,CAAA,EAAA,CAAA;;AALA,aAOA,QAPA;AAAA;AAAA;;AAAA;AAAA,0EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,QAFA,GAEA;AACA,0BAAA,IAAA,CAAA,KADA;AAEA,+BAAA,SAAA,CAAA,KAFA;AAGA,gCAAA,YAAA,CAAA,KAHA;AAIA,8BAAA,UAAA,CAAA;AAJA,iBAFA;AASA,gBAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AATA;AAAA;AAAA,uBAYA,KAAA,CAAA,IAAA,CAAA,+BAAA,EAAA,QAAA,CAZA;;AAAA;AAaA,gBAAA,OAAA,CAAA,KAAA,GAAA,cAAA;AAbA;AAAA;;AAAA;AAAA;AAAA;AAeA,gBAAA,OAAA,CAAA,GAAA;AACA,gBAAA,OAAA,CAAA,KAAA;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPA;AAAA;AAAA;;AAyBA;AAEA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,SAFA;AAGA,MAAA,YAAA,EAAA,YAHA;AAIA,MAAA,UAAA,EAAA,UAJA;AAKA,MAAA,QAAA,EAAA,QALA;AAMA,MAAA,OAAA,EAAA;AANA,KAAA;AAQA;AArCA,CAAA","sourcesContent":["<template>\n  <div class=\"menu\">\n    <h2>Deploy Bot</h2>\n    <b-form class=\"bot-form\">\n      <b-form-group>\n        <b-form-input class=\"input\" type=\"text\" \n                      placeholder=\"Bot Name\" v-model=\"name\"/>\n      </b-form-group>\n      <b-form-group>\n        <b-form-input class=\"input\" type=\"text\" \n                      placeholder=\"Subreddit\" v-model=\"subreddit\"/>\n      </b-form-group>\n      <!-- <b-form-group class=\"checkbox\">\n          <b-form-checkbox v-model=\"optionSpeech\" class=\"check\">\n          Detect Hate Speech\n          </b-form-checkbox>\n          <b-form-checkbox v-model=\"optionNews\" class=\"check\">\n          Detect Fake News\n          </b-form-checkbox>\n      </b-form-group> -->\n      <label class=\"submit\">\n        <b-button variant=\"outline-primary\" @click=\"onSubmit\">Deploy</b-button>\n      </label>\n      <h5>{{message}}</h5>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport { ref } from '@vue/composition-api';\nimport axios from 'axios';\n\nexport default {\n  name: 'Home',\n  setup() {\n    const name = ref('');\n    const subreddit = ref('');\n    const optionSpeech = ref(false);\n    const optionNews = ref(false);\n    const message = ref('');\n\n    async function onSubmit() {\n\n      var formData = {\n        \"name\": name.value,\n        \"subreddit\": subreddit.value,\n        \"hateSpeech\": optionSpeech.value,\n        \"fakeNews\": optionNews.value,\n      }\n\n      console.log(formData);\n\n      try {\n        await axios.post('http://localhost:4000/postBot', formData);\n        message.value = 'Bot Created!';\n      } catch (err) {\n        console.log(err);\n        message.value = err;\n      }\n    };\n\n    return {\n      name,\n      subreddit,\n      optionSpeech,\n      optionNews,\n      onSubmit,\n      message,\n    };\n  }\n}\n</script>\n\n<style scoped>\nh2 {\n  font-weight: bold;\n}\n\n.menu {\n  display: flex;\n  padding: 50px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.bot-form {\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin: 40px 40px;\n  padding: 20px;\n}\n\n.check {\n  float: left;\n  margin: 4px;\n}\n</style>"],"sourceRoot":"src/views"}]}