{"remainingRequest":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/babel-loader/lib/index.js!/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chris/Documents/GitHub/seanWebsite/app/src/views/Bots.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/src/views/Bots.vue","mtime":1611907808290},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvY2hyaXMvRG9jdW1lbnRzL0dpdEh1Yi9zZWFuV2Vic2l0ZS9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyByZWYgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaSc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQm90cycsCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKCkgewogICAgdmFyIGJvdHMgPSByZWYoW10pOwogICAgdmFyIG1vZGFsSW5mbyA9IHJlZihbXSk7CiAgICB2YXIgbW9kYWxTdWIgPSByZWYoJycpOwogICAgdmFyIG1vZGFsTmFtZSA9IHJlZignJyk7CiAgICB2YXIgZmllbGRzID0gcmVmKFtdKTsKICAgIHZhciBuZXdGaWVsZHMgPSByZWYoW10pOyAvLyBjb25zdCBuZXdGYWtlTmV3cyA9IHJlZihmYWxzZSk7CiAgICAvLyBjb25zdCBuZXdIYXRlU3BlZWNoID0gcmVmKGZhbHNlKTsKCiAgICBmaWVsZHMudmFsdWUgPSBbewogICAgICBrZXk6ICduYW1lJywKICAgICAgbGFiZWw6ICdCb3QgbmFtZScsCiAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICB9LCB7CiAgICAgIGtleTogJ3N1YnJlZGRpdCcsCiAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICB9LCB7CiAgICAgIGtleTogJ2FjdGlvbnMnLAogICAgICBsYWJlbDogJ0FjdGlvbnMnLAogICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgIHRoQ2xhc3M6ICdhY3Rpb25zLWNvbCcsCiAgICAgIHRkQ2xhc3M6ICdhY3Rpb25zLWNvbCcKICAgIH1dOwoKICAgIGZ1bmN0aW9uIGdldEJvdHMoKSB7CiAgICAgIHJldHVybiBfZ2V0Qm90cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIGZ1bmN0aW9uIF9nZXRCb3RzKCkgewogICAgICBfZ2V0Qm90cyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjQwMDAvZ2V0QWxsJyk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGJvdHMudmFsdWUgPSBbXTsKICAgICAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoYm90KSB7CiAgICAgICAgICAgICAgICAgIGJvdHMudmFsdWUucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogYm90Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgc3VicmVkZGl0OiBib3Quc3VicmVkZGl0LAogICAgICAgICAgICAgICAgICAgIGZha2VOZXdzOiBib3QuZmFrZU5ld3MsCiAgICAgICAgICAgICAgICAgICAgaGF0ZVNwZWVjaDogYm90LmhhdGVTcGVlY2gKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBpZiAoYm90cy52YWx1ZS5sZW5ndGggPT09IDApIHsKICAgICAgICAgICAgICAgICAgYm90cy52YWx1ZSA9IFt7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ05vIGJvdHMgZm91bmQnLAogICAgICAgICAgICAgICAgICAgIHN1YnJlZGRpdDogJ04vQScsCiAgICAgICAgICAgICAgICAgICAgZmFrZU5ld3M6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgaGF0ZVNwZWVjaDogZmFsc2UKICAgICAgICAgICAgICAgICAgfV07CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CiAgICAgIHJldHVybiBfZ2V0Qm90cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIGZ1bmN0aW9uIGRlbGV0ZUJvdChib3ROYW1lKSB7CiAgICAgIGF4aW9zLmRlbGV0ZSgnaHR0cDovL2xvY2FsaG9zdDo0MDAwL2RlbGV0ZUJvdCcsIHsKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBuYW1lOiBib3ROYW1lCiAgICAgICAgfQogICAgICB9KTsKICAgICAgYm90cy52YWx1ZS5zcGxpY2UoYm90cy52YWx1ZS5maW5kSW5kZXgoZnVuY3Rpb24gKGJvdCkgewogICAgICAgIHJldHVybiBib3QubmFtZSA9PT0gYm90TmFtZTsKICAgICAgfSksIDEpOwogICAgfQoKICAgIGZ1bmN0aW9uIGVkaXRCb3QoYm90TmFtZSwgbmV3SW5mbykgewogICAgICB2YXIgZm9ybURhdGEgPSB7CiAgICAgICAgIm5hbWUiOiBib3ROYW1lLAogICAgICAgICJuZXdBdHRyaWJ1dGVzIjogewogICAgICAgICAgInN1YnJlZGRpdCI6IG5ld0luZm8uc3VicmVkZGl0LAogICAgICAgICAgImhhdGVTcGVlY2giOiB0cnVlLAogICAgICAgICAgImZha2VOZXdzIjogZmFsc2UKICAgICAgICB9CiAgICAgIH07CiAgICAgIGNvbnNvbGUubG9nKGF4aW9zLnB1dCgnaHR0cDovL2xvY2FsaG9zdDo0MDAwL2VkaXRCb3QnLCBmb3JtRGF0YSkpOyAvLyB0aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgICAvLyB7Im5hbWUiOiAidGVzdDEiLAogICAgICAvLyAibmV3QXR0cmlidXRlcyI6IHsiZmFrZU5ld3MiOiAidHJ1ZSIsCiAgICAgIC8vICJoYXRlU3BlZWNoIjogInRydWUiLAogICAgICAvLyAic3VicmVkZGl0IjogIkVESVRfVEVTVCJ9fQogICAgfQoKICAgIGZ1bmN0aW9uIGhhbmRsZU1vZGFsKGJvdCkgewogICAgICBtb2RhbEluZm8udmFsdWUgPSBib3Q7CiAgICAgIG1vZGFsTmFtZS52YWx1ZSA9IG1vZGFsSW5mby52YWx1ZS5uYW1lOwogICAgICBtb2RhbFN1Yi52YWx1ZSA9IG1vZGFsSW5mby52YWx1ZS5zdWJyZWRkaXQ7CiAgICB9CgogICAgZ2V0Qm90cygpOwogICAgcmV0dXJuIHsKICAgICAgYm90czogYm90cywKICAgICAgbW9kYWxTdWI6IG1vZGFsU3ViLAogICAgICBtb2RhbE5hbWU6IG1vZGFsTmFtZSwKICAgICAgbW9kYWxJbmZvOiBtb2RhbEluZm8sCiAgICAgIC8vIG5ld0Zha2VOZXdzLAogICAgICAvLyBuZXdIYXRlU3BlZWNoLAogICAgICBmaWVsZHM6IGZpZWxkcywKICAgICAgbmV3RmllbGRzOiBuZXdGaWVsZHMsCiAgICAgIGhhbmRsZU1vZGFsOiBoYW5kbGVNb2RhbCwKICAgICAgZ2V0Qm90czogZ2V0Qm90cywKICAgICAgZGVsZXRlQm90OiBkZWxldGVCb3QsCiAgICAgIGVkaXRCb3Q6IGVkaXRCb3QKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["Bots.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,SAAA,GAAA,QAAA,sBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAFA,maAJA;AAKA,MAAA,OAAA,EAAA;AALA,KAVA,CAAA;;AAVA,aA6BA,OA7BA;AAAA;AAAA;;AAAA;AAAA,yEA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,GAAA,CAAA,8BAAA,CADA;;AAAA;AACA,gBAAA,QADA;AAGA,gBAAA,IAAA,CAAA,KAAA,GAAA,EAAA;AACA,gBAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,GAAA,CAAA,IADA;AAEA,oBAAA,SAAA,EAAA,GAAA,CAAA,SAFA;AAGA,oBAAA,QAAA,EAAA,GAAA,CAAA,QAHA;AAIA,oBAAA,UAAA,EAAA,GAAA,CAAA;AAJA,mBAAA;AAMA,iBAPA;;AASA,oBAAA,IAAA,CAAA,KAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,kBAAA,IAAA,CAAA,KAAA,GAAA,CACA;AACA,oBAAA,IAAA,EAAA,eADA;AAEA,oBAAA,SAAA,EAAA,KAFA;AAGA,oBAAA,QAAA,EAAA,IAHA;AAIA,oBAAA,UAAA,EAAA;AAJA,mBADA,CAAA;AAQA;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA7BA;AAAA;AAAA;;AAsDA,aAAA,SAAA,CAAA,OAAA,EAAA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,iCAAA,EAAA;AACA,QAAA,IAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AADA,OAAA;AAIA,MAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,UAAA,GAAA;AAAA,eAAA,GAAA,CAAA,IAAA,KAAA,OAAA;AAAA,OAAA,CAAA,EAAA,CAAA;AACA;;AAEA,aAAA,OAAA,CAAA,OAAA,EAAA,OAAA,EAAA;AACA,UAAA,QAAA,GAAA;AACA,gBAAA,OADA;AAEA,yBAAA;AACA,uBAAA,OAAA,CAAA,SADA;AAEA,wBAAA,IAFA;AAGA,sBAAA;AAHA;AAFA,OAAA;AAQA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,+BAAA,EAAA,QAAA,CAAA,EATA,CAUA;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAA,WAAA,CAAA,GAAA,EAAA;AACA,MAAA,SAAA,CAAA,KAAA,GAAA,GAAA;AACA,MAAA,SAAA,CAAA,KAAA,GAAA,SAAA,CAAA,KAAA,CAAA,IAAA;AACA,MAAA,QAAA,CAAA,KAAA,GAAA,SAAA,CAAA,KAAA,CAAA,SAAA;AACA;;AAEA,IAAA,OAAA;AAEA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,QAAA,EAAA,QAFA;AAGA,MAAA,SAAA,EAAA,SAHA;AAIA,MAAA,SAAA,EAAA,SAJA;AAKA;AACA;AACA,MAAA,MAAA,EAAA,MAPA;AAQA,MAAA,SAAA,EAAA,SARA;AASA,MAAA,WAAA,EAAA,WATA;AAUA,MAAA,OAAA,EAAA,OAVA;AAWA,MAAA,SAAA,EAAA,SAXA;AAYA,MAAA,OAAA,EAAA;AAZA,KAAA;AAcA;AAxGA,CAAA","sourcesContent":["<template>\n  <div class=\"bots\">\n    <h2>Bots</h2>\n     <label class=\"refresh\">\n      <b-button variant=\"outline-primary\" @click=\"getBots\">Refresh</b-button>\n    </label>\n    <div class=\"table\">\n      <b-table striped hover bordered :items=\"bots\" :fields=\"fields\">\n        <template #cell(actions)=\"row\">\n          <b-button size=\"sm\" variant=\"outline-primary\" @click=\"deleteBot(row.item.name)\">\n            <b-icon-trash />\n          </b-button>\n          <b-button v-b-modal.edit-modal size=\"sm\" @click=\"handleModal(row.item)\" variant=\"outline-primary\" class=\"actionButton\">\n            <b-icon-pencil />\n          </b-button>\n        </template>\n      </b-table>\n    </div>\n    <b-modal id=\"edit-modal\" title=\"Edit Bot\" @ok=\"editBot(modalName, newFields)\" class=\"actionButton\">\n      <h5>Name: {{modalName}}</h5>\n      <label>\n        Subreddit: r/ \n        <input type=\"text\" v-model=\"newFields.subreddit\" class=\"input\">\n        (Previously: {{modalSub}})\n      </label>\n      <!-- <b-form-group class=\"checkbox\">\n        <b-form-checkbox v-model=\"newHateSpeech\" class=\"check\">\n          Detect Hate Speech\n        </b-form-checkbox>\n        <b-form-checkbox v-model=\"newFakeNews\" class=\"check\">\n          Detect Fake News\n        </b-form-checkbox>\n      </b-form-group> -->\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { ref } from '@vue/composition-api';\nimport axios from 'axios';\n\nexport default {\n  name: 'Bots',\n  setup() {\n    const bots = ref([]);\n    const modalInfo= ref([]);\n    const modalSub = ref('');\n    const modalName = ref('');\n    const fields = ref([]);\n    const newFields = ref([]);\n    // const newFakeNews = ref(false);\n    // const newHateSpeech = ref(false);\n\n    fields.value = [\n      {\n        key: 'name',\n        label: 'Bot name',\n        sortable: true\n      },\n      {\n        key: 'subreddit',\n        sortable: true\n      },\n      {\n        key: 'actions',\n        label: 'Actions',\n        sortable: false,\n        thClass: 'actions-col',\n        tdClass: 'actions-col'\n      }\n    ];\n\n    async function getBots() {\n      const response = await axios.get('http://localhost:4000/getAll');\n\n      bots.value = [];\n      response.data.forEach(bot => {\n        bots.value.push({\n          name: bot.name,\n          subreddit: bot.subreddit,\n          fakeNews: bot.fakeNews,\n          hateSpeech: bot.hateSpeech\n        });\n      });\n\n      if (bots.value.length === 0) {\n        bots.value = [\n          {\n            name: 'No bots found',\n            subreddit: 'N/A',\n            fakeNews: true,\n            hateSpeech: false\n          }\n        ];\n      }\n    }\n\n    function deleteBot(botName) {\n      axios.delete('http://localhost:4000/deleteBot', {\n        data: { name: botName }\n      });\n\n      bots.value.splice(bots.value.findIndex(bot => bot.name === botName), 1);\n    }\n\n    function editBot(botName, newInfo) {\n      var formData = {\n        \"name\": botName,\n        \"newAttributes\": {\n          \"subreddit\": newInfo.subreddit,\n          \"hateSpeech\": true,\n          \"fakeNews\": false\n        }\n      }\n      console.log(axios.put('http://localhost:4000/editBot', formData));\n      // this.$forceUpdate();\n\n            // {\"name\": \"test1\",\n            // \"newAttributes\": {\"fakeNews\": \"true\",\n            // \"hateSpeech\": \"true\",\n            // \"subreddit\": \"EDIT_TEST\"}}\n    }\n\n    function handleModal(bot) {\n      modalInfo.value = bot;\n      modalName.value = modalInfo.value.name;\n      modalSub.value = modalInfo.value.subreddit;\n    }\n\n    getBots();\n\n    return {\n      bots,\n      modalSub,\n      modalName,\n      modalInfo,\n      // newFakeNews,\n      // newHateSpeech,\n      fields,\n      newFields,\n      handleModal,\n      getBots,\n      deleteBot,\n      editBot,\n    };\n  }\n}\n</script>\n\n<style>\n.bots h2 {\n  font-weight: bold;\n}\n\n.bots {\n  display: flex;\n  flex-direction: column;\n  padding: 50px;\n  align-items: center;\n  justify-content: center;\n}\n\n.table {\n  width: 1000px;\n  margin-top: 10px;\n}\n\n.actions-col {\n  width: 10%;\n}\n\n.actionButton {\n  margin: 4px;\n}\n\n.refresh {\n  float: right;\n  margin-right: 8px;\n  margin-left: 1220px;\n  margin-bottom: 0px;\n}\n\n.input {\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}