{"remainingRequest":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chris/Documents/GitHub/seanWebsite/app/src/views/Bots.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/src/views/Bots.vue","mtime":1611907808290},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlZiB9IGZyb20gJ0B2dWUvY29tcG9zaXRpb24tYXBpJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQm90cycsCiAgc2V0dXAoKSB7CiAgICBjb25zdCBib3RzID0gcmVmKFtdKTsKICAgIGNvbnN0IG1vZGFsSW5mbz0gcmVmKFtdKTsKICAgIGNvbnN0IG1vZGFsU3ViID0gcmVmKCcnKTsKICAgIGNvbnN0IG1vZGFsTmFtZSA9IHJlZignJyk7CiAgICBjb25zdCBmaWVsZHMgPSByZWYoW10pOwogICAgY29uc3QgbmV3RmllbGRzID0gcmVmKFtdKTsKICAgIC8vIGNvbnN0IG5ld0Zha2VOZXdzID0gcmVmKGZhbHNlKTsKICAgIC8vIGNvbnN0IG5ld0hhdGVTcGVlY2ggPSByZWYoZmFsc2UpOwoKICAgIGZpZWxkcy52YWx1ZSA9IFsKICAgICAgewogICAgICAgIGtleTogJ25hbWUnLAogICAgICAgIGxhYmVsOiAnQm90IG5hbWUnLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBrZXk6ICdzdWJyZWRkaXQnLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBrZXk6ICdhY3Rpb25zJywKICAgICAgICBsYWJlbDogJ0FjdGlvbnMnLAogICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICB0aENsYXNzOiAnYWN0aW9ucy1jb2wnLAogICAgICAgIHRkQ2xhc3M6ICdhY3Rpb25zLWNvbCcKICAgICAgfQogICAgXTsKCiAgICBhc3luYyBmdW5jdGlvbiBnZXRCb3RzKCkgewogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo0MDAwL2dldEFsbCcpOwoKICAgICAgYm90cy52YWx1ZSA9IFtdOwogICAgICByZXNwb25zZS5kYXRhLmZvckVhY2goYm90ID0+IHsKICAgICAgICBib3RzLnZhbHVlLnB1c2goewogICAgICAgICAgbmFtZTogYm90Lm5hbWUsCiAgICAgICAgICBzdWJyZWRkaXQ6IGJvdC5zdWJyZWRkaXQsCiAgICAgICAgICBmYWtlTmV3czogYm90LmZha2VOZXdzLAogICAgICAgICAgaGF0ZVNwZWVjaDogYm90LmhhdGVTcGVlY2gKICAgICAgICB9KTsKICAgICAgfSk7CgogICAgICBpZiAoYm90cy52YWx1ZS5sZW5ndGggPT09IDApIHsKICAgICAgICBib3RzLnZhbHVlID0gWwogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAnTm8gYm90cyBmb3VuZCcsCiAgICAgICAgICAgIHN1YnJlZGRpdDogJ04vQScsCiAgICAgICAgICAgIGZha2VOZXdzOiB0cnVlLAogICAgICAgICAgICBoYXRlU3BlZWNoOiBmYWxzZQogICAgICAgICAgfQogICAgICAgIF07CiAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBkZWxldGVCb3QoYm90TmFtZSkgewogICAgICBheGlvcy5kZWxldGUoJ2h0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9kZWxldGVCb3QnLCB7CiAgICAgICAgZGF0YTogeyBuYW1lOiBib3ROYW1lIH0KICAgICAgfSk7CgogICAgICBib3RzLnZhbHVlLnNwbGljZShib3RzLnZhbHVlLmZpbmRJbmRleChib3QgPT4gYm90Lm5hbWUgPT09IGJvdE5hbWUpLCAxKTsKICAgIH0KCiAgICBmdW5jdGlvbiBlZGl0Qm90KGJvdE5hbWUsIG5ld0luZm8pIHsKICAgICAgdmFyIGZvcm1EYXRhID0gewogICAgICAgICJuYW1lIjogYm90TmFtZSwKICAgICAgICAibmV3QXR0cmlidXRlcyI6IHsKICAgICAgICAgICJzdWJyZWRkaXQiOiBuZXdJbmZvLnN1YnJlZGRpdCwKICAgICAgICAgICJoYXRlU3BlZWNoIjogdHJ1ZSwKICAgICAgICAgICJmYWtlTmV3cyI6IGZhbHNlCiAgICAgICAgfQogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKGF4aW9zLnB1dCgnaHR0cDovL2xvY2FsaG9zdDo0MDAwL2VkaXRCb3QnLCBmb3JtRGF0YSkpOwogICAgICAvLyB0aGlzLiRmb3JjZVVwZGF0ZSgpOwoKICAgICAgICAgICAgLy8geyJuYW1lIjogInRlc3QxIiwKICAgICAgICAgICAgLy8gIm5ld0F0dHJpYnV0ZXMiOiB7ImZha2VOZXdzIjogInRydWUiLAogICAgICAgICAgICAvLyAiaGF0ZVNwZWVjaCI6ICJ0cnVlIiwKICAgICAgICAgICAgLy8gInN1YnJlZGRpdCI6ICJFRElUX1RFU1QifX0KICAgIH0KCiAgICBmdW5jdGlvbiBoYW5kbGVNb2RhbChib3QpIHsKICAgICAgbW9kYWxJbmZvLnZhbHVlID0gYm90OwogICAgICBtb2RhbE5hbWUudmFsdWUgPSBtb2RhbEluZm8udmFsdWUubmFtZTsKICAgICAgbW9kYWxTdWIudmFsdWUgPSBtb2RhbEluZm8udmFsdWUuc3VicmVkZGl0OwogICAgfQoKICAgIGdldEJvdHMoKTsKCiAgICByZXR1cm4gewogICAgICBib3RzLAogICAgICBtb2RhbFN1YiwKICAgICAgbW9kYWxOYW1lLAogICAgICBtb2RhbEluZm8sCiAgICAgIC8vIG5ld0Zha2VOZXdzLAogICAgICAvLyBuZXdIYXRlU3BlZWNoLAogICAgICBmaWVsZHMsCiAgICAgIG5ld0ZpZWxkcywKICAgICAgaGFuZGxlTW9kYWwsCiAgICAgIGdldEJvdHMsCiAgICAgIGRlbGV0ZUJvdCwKICAgICAgZWRpdEJvdCwKICAgIH07CiAgfQp9Cg=="},{"version":3,"sources":["Bots.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Bots.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"bots\">\n    <h2>Bots</h2>\n     <label class=\"refresh\">\n      <b-button variant=\"outline-primary\" @click=\"getBots\">Refresh</b-button>\n    </label>\n    <div class=\"table\">\n      <b-table striped hover bordered :items=\"bots\" :fields=\"fields\">\n        <template #cell(actions)=\"row\">\n          <b-button size=\"sm\" variant=\"outline-primary\" @click=\"deleteBot(row.item.name)\">\n            <b-icon-trash />\n          </b-button>\n          <b-button v-b-modal.edit-modal size=\"sm\" @click=\"handleModal(row.item)\" variant=\"outline-primary\" class=\"actionButton\">\n            <b-icon-pencil />\n          </b-button>\n        </template>\n      </b-table>\n    </div>\n    <b-modal id=\"edit-modal\" title=\"Edit Bot\" @ok=\"editBot(modalName, newFields)\" class=\"actionButton\">\n      <h5>Name: {{modalName}}</h5>\n      <label>\n        Subreddit: r/ \n        <input type=\"text\" v-model=\"newFields.subreddit\" class=\"input\">\n        (Previously: {{modalSub}})\n      </label>\n      <!-- <b-form-group class=\"checkbox\">\n        <b-form-checkbox v-model=\"newHateSpeech\" class=\"check\">\n          Detect Hate Speech\n        </b-form-checkbox>\n        <b-form-checkbox v-model=\"newFakeNews\" class=\"check\">\n          Detect Fake News\n        </b-form-checkbox>\n      </b-form-group> -->\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { ref } from '@vue/composition-api';\nimport axios from 'axios';\n\nexport default {\n  name: 'Bots',\n  setup() {\n    const bots = ref([]);\n    const modalInfo= ref([]);\n    const modalSub = ref('');\n    const modalName = ref('');\n    const fields = ref([]);\n    const newFields = ref([]);\n    // const newFakeNews = ref(false);\n    // const newHateSpeech = ref(false);\n\n    fields.value = [\n      {\n        key: 'name',\n        label: 'Bot name',\n        sortable: true\n      },\n      {\n        key: 'subreddit',\n        sortable: true\n      },\n      {\n        key: 'actions',\n        label: 'Actions',\n        sortable: false,\n        thClass: 'actions-col',\n        tdClass: 'actions-col'\n      }\n    ];\n\n    async function getBots() {\n      const response = await axios.get('http://localhost:4000/getAll');\n\n      bots.value = [];\n      response.data.forEach(bot => {\n        bots.value.push({\n          name: bot.name,\n          subreddit: bot.subreddit,\n          fakeNews: bot.fakeNews,\n          hateSpeech: bot.hateSpeech\n        });\n      });\n\n      if (bots.value.length === 0) {\n        bots.value = [\n          {\n            name: 'No bots found',\n            subreddit: 'N/A',\n            fakeNews: true,\n            hateSpeech: false\n          }\n        ];\n      }\n    }\n\n    function deleteBot(botName) {\n      axios.delete('http://localhost:4000/deleteBot', {\n        data: { name: botName }\n      });\n\n      bots.value.splice(bots.value.findIndex(bot => bot.name === botName), 1);\n    }\n\n    function editBot(botName, newInfo) {\n      var formData = {\n        \"name\": botName,\n        \"newAttributes\": {\n          \"subreddit\": newInfo.subreddit,\n          \"hateSpeech\": true,\n          \"fakeNews\": false\n        }\n      }\n      console.log(axios.put('http://localhost:4000/editBot', formData));\n      // this.$forceUpdate();\n\n            // {\"name\": \"test1\",\n            // \"newAttributes\": {\"fakeNews\": \"true\",\n            // \"hateSpeech\": \"true\",\n            // \"subreddit\": \"EDIT_TEST\"}}\n    }\n\n    function handleModal(bot) {\n      modalInfo.value = bot;\n      modalName.value = modalInfo.value.name;\n      modalSub.value = modalInfo.value.subreddit;\n    }\n\n    getBots();\n\n    return {\n      bots,\n      modalSub,\n      modalName,\n      modalInfo,\n      // newFakeNews,\n      // newHateSpeech,\n      fields,\n      newFields,\n      handleModal,\n      getBots,\n      deleteBot,\n      editBot,\n    };\n  }\n}\n</script>\n\n<style>\n.bots h2 {\n  font-weight: bold;\n}\n\n.bots {\n  display: flex;\n  flex-direction: column;\n  padding: 50px;\n  align-items: center;\n  justify-content: center;\n}\n\n.table {\n  width: 1000px;\n  margin-top: 10px;\n}\n\n.actions-col {\n  width: 10%;\n}\n\n.actionButton {\n  margin: 4px;\n}\n\n.refresh {\n  float: right;\n  margin-right: 8px;\n  margin-left: 1220px;\n  margin-bottom: 0px;\n}\n\n.input {\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n}\n\n</style>\n"]}]}