{"remainingRequest":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chris/Documents/GitHub/seanWebsite/app/src/views/Trends.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/src/views/Trends.vue","mtime":1611907808295},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Documents/GitHub/seanWebsite/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlZiB9IGZyb20gJ0B2dWUvY29tcG9zaXRpb24tYXBpJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVHJlbmRzJywKICBzZXR1cCgpIHsKICAgIGNvbnN0IGRhdGEgPSByZWYoW10pOwogICAgY29uc3QgeExhYmVscyA9IHJlZihbXSk7CiAgICAvLyBnZXQgbGFzdCAzMCBkYXlzCgogICAgZnVuY3Rpb24gZ2V0TGFzdERheXMoKSB7CiAgICAgIGNvbnN0IGRhdGVzID0gW107CiAgICAgIGxldCBkYXRlID0gbmV3IERhdGUoKTsKCiAgICAgIGZvciAobGV0IGk9MDsgaSA8IDMwOyArK2kpIHsKICAgICAgICBkYXRlcy5wdXNoKChkYXRlLmdldE1vbnRoKCkrMSkgKyAnLScgKyBkYXRlLmdldERhdGUoKSk7CiAgICAgICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpIC0gMSk7IAogICAgICB9CiAgICAgIHhMYWJlbHMudmFsdWUgPSBkYXRlcy5yZXZlcnNlKCk7CiAgICB9CgogICAgYXN5bmMgZnVuY3Rpb24gZ2V0VHJlbmRzKCkgewogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo0MDAwL3RpbWVTZXJpZXNTdGF0aWMnKTsKCiAgICAgIGxldCBpID0gMDsKICAgICAgZm9yIChsZXQgc3VicmVkZGl0IGluIHJlc3BvbnNlLmRhdGEpIHsKICAgICAgICBkYXRhLnZhbHVlLnB1c2goewogICAgICAgICAgZGF0YTogcmVzcG9uc2UuZGF0YVtzdWJyZWRkaXRdLAogICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgY2xhc3NOYW1lOiAnbGluZS1jbGFzcy0nICsgaQogICAgICAgIH0pOwogICAgICAgICsraTsKICAgICAgfQogICAgfQoKICAgIGdldFRyZW5kcygpOwogICAgZ2V0TGFzdERheXMoKTsKCiAgICByZXR1cm4gewogICAgICBkYXRhLAogICAgICB4TGFiZWxzCiAgICB9OwogIH0KfQo="},{"version":3,"sources":["Trends.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Trends.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"trends\">\n    <h1>Trends</h1>\n      <TrendChart class=\"chart\"\n      :interactive=\"true\"\n      :datasets=\"data\"\n      :grid=\"{\n        horizontalLines: true\n      }\"\n      :labels='{\n        xLabels: xLabels,\n        yLabels: 10\n      }'\n      :min=\"0\">\n    </TrendChart>\n    <h5>Date</h5>\n  </div>\n</template>\n\n<script>\nimport { ref } from '@vue/composition-api';\nimport axios from 'axios';\n\nexport default {\n  name: 'Trends',\n  setup() {\n    const data = ref([]);\n    const xLabels = ref([]);\n    // get last 30 days\n\n    function getLastDays() {\n      const dates = [];\n      let date = new Date();\n\n      for (let i=0; i < 30; ++i) {\n        dates.push((date.getMonth()+1) + '-' + date.getDate());\n        date.setDate(date.getDate() - 1); \n      }\n      xLabels.value = dates.reverse();\n    }\n\n    async function getTrends() {\n      const response = await axios.get('http://localhost:4000/timeSeriesStatic');\n\n      let i = 0;\n      for (let subreddit in response.data) {\n        data.value.push({\n          data: response.data[subreddit],\n          smooth: true,\n          className: 'line-class-' + i\n        });\n        ++i;\n      }\n    }\n\n    getTrends();\n    getLastDays();\n\n    return {\n      data,\n      xLabels\n    };\n  }\n}\n</script>\n\n<style>\n.trends h2 {\n  font-weight: bold;\n}\n\n.trends {\n  display: flex;\n  padding: 50px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.chart {\n  height: 500px;\n}\n\n.line-class-0 .stroke {\n  stroke: #f69119;\n  stroke-width: 2;\n}\n\n.line-class-1 .stroke {\n  stroke: #7fdfd4;\n  stroke-width: 2;\n}\n\n.line-class-2 .stroke {\n  stroke: #fbe1b6;\n  stroke-width: 2;\n}\n\n.y-axis {\n  display: flex;\n  vertical-align: text-top;\n}\n</style>\n"]}]}